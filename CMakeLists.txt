cmake_minimum_required(VERSION 3.12)
project(interference)

set(CMAKE_CXX_STANDARD 14)

add_library(interference src/neuron/neuron.cpp include/inn/neuron.h src/neuron/entry.cpp src/neuron/system.cpp src/neuron/synaps.cpp src/neuron/receptor.cpp src/position.cpp include/inn/position.h src/error.cpp include/inn/error.h src/neuralnet/neuralnet.cpp include/inn/neuralnet.h src/neuralnet/link.cpp include/inn/computer.hpp)
if(WIN32)
    include_directories(interference "C:/boost/compute/include/")
    include_directories(interference "C:/Program Files (x86)/AMD APP SDK/3.0/include")
    target_link_libraries(interference "C:/Program Files (x86)/AMD APP SDK/3.0/lib/x86/OpenCL.lib")
    install(TARGETS interference ARCHIVE DESTINATION ${CMAKE_SOURCE_DIR}/lib)
else()
    install(TARGETS interference ARCHIVE DESTINATION lib)
    install(DIRECTORY include/ DESTINATION include)
endif()

add_executable(inn_vision_sample samples/inn_vision/main.cpp samples/inn_vision/lodepng.cpp)
if(WIN32)
    set(CMAKE_EXE_LINKER_FLAGS "-static -static-libgcc -static-libstdc++")
    set(INTERFERENCE_ROOT "../..")
    include_directories("${INTERFERENCE_ROOT}/include")
    find_library(INTERFERENCE_LIB "${INTERFERENCE_ROOT}/lib/libinterference.a")
    target_link_libraries(inn_vision_sample "${CMAKE_SOURCE_DIR}/../../lib/libinterference.a")
    install(TARGETS ${PROJECT_NAME} RUNTIME DESTINATION ${INTERFERENCE_ROOT}/bin)
else()
    include_directories("include/")
    find_package(Threads REQUIRED)
    target_link_libraries(inn_vision_sample interference Threads::Threads -latomic)
    install(TARGETS inn_vision_sample RUNTIME DESTINATION ${PROJECT_SOURCE_DIR}/samples/inn_vision/bin)
endif()
